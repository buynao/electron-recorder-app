{
  "version": 3,
  "sources": ["../src/main/index.ts", "../src/main/ipc/windowContrl.ts"],
  "sourcesContent": ["import path from 'path';\nimport {  BrowserWindow, app } from 'electron';\n// import { searchDevtools } from 'electron-search-devtools';\nimport remoteMain from '@electron/remote/main';\nimport { join } from \"path\";\nimport { pathToFileURL } from \"url\";\nimport { handleWindowEvent } from './ipc/windowContrl';\n\nremoteMain.initialize();\n\nconst isDev = process.env.NODE_ENV === 'development';\n\n/// #if DEBUG\nconst execPath =\n  process.platform === 'win32'\n    ? '../node_modules/electron/dist/electron.exe'\n    : '../node_modules/.bin/electron';\n\nif (isDev) {\n  // eslint-disable-next-line @typescript-eslint/no-var-requires\n  require('electron-reload')(__dirname, {\n    electron: path.resolve(__dirname, execPath),\n    forceHardReset: true,\n    hardResetMethod: 'exit',\n  });\n}\n/// #endif\n\napp.whenReady().then(async () => {\n  const mainWindow = new BrowserWindow({\n    width: 1100,\n    height: 800,\n    backgroundColor: '#535457',\n    transparent: true, \n    frame: false,\n    webPreferences: {\n      nodeIntegration: true,\n      contextIsolation: false\n    }\n  });\n  \n  if (isDev) {\n    mainWindow.loadURL(\"http://localhost:3000\");\n    mainWindow.webContents.toggleDevTools();\n  } else {\n    mainWindow.loadURL(\n      pathToFileURL(join(__dirname, \"./renderer/index.html\")).toString()\n    );\n  }\n  remoteMain.enable(mainWindow.webContents);\n  handleWindowEvent(mainWindow);\n});\n\n", "\nimport {  BrowserWindow, ipcMain, app } from 'electron';\n\nexport function handleWindowEvent(winodw: BrowserWindow) {\n  ipcMain.on('window-close', () => {\n    app.quit();\n  });\n  ipcMain.on('window-minimize', () => {\n    console.log('window-minimize');\n    winodw.minimize();\n  });\n  ipcMain.on('window-maximize', () => {\n    console.log('window-maximize');\n    winodw.setFullScreen(true);\n  });\n  ipcMain.on('window-unmaximize', () => {\n    console.log('window-unmaximize');\n    winodw.setFullScreen(false);\n  });\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA,kBAAiB;AACjB,uBAAoC;AAEpC,kBAAuB;AACvB,mBAAqB;AACrB,iBAA8B;;;ACJ9B,sBAA6C;AAEtC,2BAA2B,QAAuB;AACvD,0BAAQ,GAAG,gBAAgB,MAAM;AAC/B,wBAAI;AAAA;AAEN,0BAAQ,GAAG,mBAAmB,MAAM;AAClC,YAAQ,IAAI;AACZ,WAAO;AAAA;AAET,0BAAQ,GAAG,mBAAmB,MAAM;AAClC,YAAQ,IAAI;AACZ,WAAO,cAAc;AAAA;AAEvB,0BAAQ,GAAG,qBAAqB,MAAM;AACpC,YAAQ,IAAI;AACZ,WAAO,cAAc;AAAA;AAAA;;;ADTzB,oBAAW;AAEX,IAAM,QAAQ,QAAQ,IAAI,aAAa;AAGvC,IAAM,WACJ,QAAQ,aAAa,UACjB,+CACA;AAEN,IAAI,OAAO;AAET,UAAQ,mBAAmB,WAAW;AAAA,IACpC,UAAU,oBAAK,QAAQ,WAAW;AAAA,IAClC,gBAAgB;AAAA,IAChB,iBAAiB;AAAA;AAAA;AAKrB,qBAAI,YAAY,KAAK,YAAY;AAC/B,QAAM,aAAa,IAAI,+BAAc;AAAA,IACnC,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,iBAAiB;AAAA,IACjB,aAAa;AAAA,IACb,OAAO;AAAA,IACP,gBAAgB;AAAA,MACd,iBAAiB;AAAA,MACjB,kBAAkB;AAAA;AAAA;AAItB,MAAI,OAAO;AACT,eAAW,QAAQ;AACnB,eAAW,YAAY;AAAA,SAClB;AACL,eAAW,QACT,8BAAc,uBAAK,WAAW,0BAA0B;AAAA;AAG5D,sBAAW,OAAO,WAAW;AAC7B,oBAAkB;AAAA;",
  "names": []
}
